{"version":3,"sources":["components/Footer.js","constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Rating.js","components/Product.js","constants/productConstants.js","actions/productActions.js","components/Loader.js","components/Message.js","screens/HomeScreen.js","screens/ProductScreen.js","constants/cartConstants.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["Footer","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","getUserDetails","id","dispatch","getState","a","type","userInfo","localStorage","getItem","JSON","parse","config","headers","Authorization","token","axios","get","data","payload","response","message","SearchBox","props","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","history","push","inline","style","display","Control","name","onChange","target","value","placeholder","Button","marginLeft","variant","Header","useDispatch","useSelector","state","userLogin","nameFromStorage","Navbar","bg","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Rating","color","text","Product","Card","product","_id","Img","src","image","width","height","Body","Title","as","Text","rating","numReviews","fontSize","price","countInStock","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","listProducts","listProductDetails","Loader","Spinner","animation","role","margin","Message","children","Alert","defaultProps","HomeScreen","match","params","productList","loading","error","products","useEffect","textDecoration","textAlign","map","sm","md","lg","xl","ProductScreen","console","log","qty","setQty","setRating","comment","setComment","productDetails","productReviewCreate","successProductReview","errorProductReview","alert","Image","alt","fluid","ListGroup","opacity","description","Array","keys","x","disabled","reviews","review","createdAt","substring","productId","post","Group","controlId","Label","row","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","setItem","stringify","cart","cartItems","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","length","item","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","ProfileScreen","userDetails","user","success","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","put","updateUserProfile","Table","striped","bordered","hover","responsive","order","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","setCity","city","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","Math","floor","orderCreate","slice","index","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","successCreate","errorCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","orderList","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","find","filter","paymengtMethod","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b55bed97.chunk.js","sourcesContent":["import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nconst Footer = () => {\n    return (\n\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">\n                        Copyright &copy; ShopCart 2021\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import { USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_RESET, USER_UPDATE_SUCCESS } from \"../constants/userConstants\"\nimport axios from 'axios'\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\"\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/users/login', {\n            email, password\n        }, config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/users', {\n            name, email, password\n        }, config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        // const { userLogin: { userInfo } } = getState()\n\n        const userInfo = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.get(\n            `/api/users/${id}`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        // const { userLogin: { userInfo } } = getState()\n\n        const userInfo = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.put(\n            `/api/users/profile`, user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        // const { userLogin: { userInfo } } = getState()\n\n        const userInfo = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.get(\n            `/api/users`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        // const { userLogin: { userInfo } } = getState()\n\n        const userInfo = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.delete(\n            `/api/users/${id}`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        // const { userLogin: { userInfo } } = getState()\n\n        const userInfo = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/${user._id}`, user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = (props) => {\n    const [keyword, setKeyword] = useState('')\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (keyword.trim()) {\n            props.history.push(`/search/${keyword}`)\n        } else {\n            props.history.push('/')\n        }\n    }\n\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <div style={{ display: \"flex\" }}>\n                <Form.Control type=\"text\" name=\"q\" onChange={(e) => setKeyword(e.target.value)} placeholder=\"Search Product...\"\n                    className=\"mr-sm-2 ml-sm-5\">\n                </Form.Control>\n                <Button style={{ marginLeft: '10px' }} type=\"submit\" variant=\"outline-success\" className=\"p-2\">Search</Button>\n            </div>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap'\nimport { logout } from '../actions/userActions'\nimport SearchBox from './SearchBox'\nimport { Route } from 'react-router-dom'\n\nconst Header = () => {\n    const dispatch = useDispatch()\n    const userLogin = useSelector(state => state.userLogin)\n\n    const { userInfo } = userLogin\n\n    const nameFromStorage = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n    return (\n        <header>\n            <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand >ShopCart</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Route render={({ history }) => <SearchBox history={history} />} />\n                        <Nav className=\"ms-auto\">\n                            <LinkContainer to=\"/cart\">\n                                <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                            </LinkContainer>\n                            {userInfo ? (\n                                <NavDropdown title={nameFromStorage.name} id=\"username\">\n                                    <LinkContainer to=\"/profile\">\n                                        <NavDropdown.Item>\n                                            Profile\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>\n                                        Logout\n                                    </NavDropdown.Item>\n                                </NavDropdown>\n                            ) :\n                                <LinkContainer to=\"/login\">\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Sign In</Nav.Link>\n                                </LinkContainer>\n\n                            }\n                            {userInfo && nameFromStorage.isAdmin && (\n                                <NavDropdown title=\"Admin\" id=\"adminmenu\">\n                                    <LinkContainer to=\"/admin/userList\">\n                                        <NavDropdown.Item>\n                                            Users\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to=\"/admin/productList\">\n                                        <NavDropdown.Item>\n                                            Products\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to=\"/admin/orderList\">\n                                        <NavDropdown.Item>\n                                            Orders\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                </NavDropdown>\n                            )}\n\n                        </Nav>\n\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar >\n        </header >\n    )\n}\n\nexport default Header\n\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Rating = (props) => {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i style={{ color: props.color }} className={props.value >= 1 ? 'fas fa-star' :\n                    props.value >= 0.5 ? 'fas fa-star-half-alt' :\n                        'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{ color: props.color }} className={props.value >= 2 ? 'fas fa-star' :\n                    props.value >= 1.5 ? 'fas fa-star-half-alt' :\n                        'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{ color: props.color }} className={props.value >= 3 ? 'fas fa-star' :\n                    props.value >= 2.5 ? 'fas fa-star-half-alt' :\n                        'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{ color: props.color }} className={props.value >= 4 ? 'fas fa-star' :\n                    props.value >= 3.5 ? 'fas fa-star-half-alt' :\n                        'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{ color: props.color }} className={props.value >= 5 ? 'fas fa-star' :\n                    props.value >= 4.5 ? 'fas fa-star-half-alt' :\n                        'far fa-star'}></i>\n            </span>\n            <span>{props.text ? props.text : ''}</span>\n        </div>\n    )\n}\n\nRating.propTypes = {\n    value: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Product = (props) => {\n\n    return (\n        <Card className=\"my-3 p-3 rounded\">\n            <Link to={`/product/${props.product._id}`}>\n                <Card.Img src={props.product.image} width=\"380\" height=\"200\" variant='top' />\n            </Link>\n            <Card.Body>\n                <Link to={`/product/${props.product._id}`}>\n                    <Card.Title as='div'>\n                        <strong>{props.product.name}</strong>\n                    </Card.Title>\n\n                </Link>\n\n                <Card.Text as='div'>\n\n                    <Rating\n                        value={props.product.rating}\n                        text={`${props.product.numReviews} reviews`}\n                        color='orange'\n                    />\n                </Card.Text>\n\n                <Card.Text as='div'><span style={{ fontSize: \"24px\", color: 'black' }}>${props.product.price}</span>{\" \"}({props.product.countInStock} in Stock )</Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'","import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL } from \"../constants/productConstants\";\nimport axios from 'axios'\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n        const { data } = await axios.get(`/api/products?keyword=${keyword}`)\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n        const { data } = await axios.get(`/api/products/${id}`)\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        // const { userLogin: { userInfo } } = getState()\n\n        const userInfo = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        await axios.delete(\n            `/api/products/${id}`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n        // const { userLogin: { userInfo } } = getState()\n        const userInfo = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.post(\n            `/api/products`, {},\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n        // const { userLogin: { userInfo } } = getState()\n        const userInfo = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.put(\n            `/api/products/${product._id}`, product,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n        // const { userLogin: { userInfo } } = getState()\n        const userInfo = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        await axios.post(\n            `/api/products/${productId}/reviews`, review,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <Spinner animation='border' role='status'\n            style={{\n                width: '100px',\n                height: '100px',\n                margin: 'auto',\n                display: 'block'\n            }}>\n            <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nMessage.defaultProps = {\n    variant: 'info'\n}\n\n\nexport default Message\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product';\nimport { listProducts } from '../actions/productActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\n\nconst HomeScreen = (props) => {\n\n    const keyword = props.match.params.keyword\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products } = productList\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n    }, [dispatch, keyword])\n\n    return (\n        <>\n            <h1 style={{ textDecoration: 'underline', textAlign: \"center\" }}>All Products</h1>\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> :\n                <Row>\n                    {products.map(product => (\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                            <Product product={product} />\n                        </Col>\n                    ))}\n                </Row>\n            }\n\n        </>\n    )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport { createProductReview, listProductDetails } from '../actions/productActions'\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = (props) => {\n    console.log(props)\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const { loading: successProductReview, error: errorProductReview } = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            alert(\"Review submitted\")\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(props.match.params.id))\n    }, [dispatch, props.match, successProductReview])\n\n    const addToCartHandler = () => {\n        props.history.push(`/cart/${props.match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(props.match.params.id, {\n            rating,\n            comment\n        }))\n    }\n\n    return (\n        <div>\n            <Link className=\"btn btn-dark m-2\" to=\"/\">Go Back</Link>\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> :\n                <>\n                    <Row>\n                        <Col md={5}>\n                            <Image src={product.image} alt={product.name} fluid />\n                        </Col>\n                        <Col md={4}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h4>{product.name}</h4>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Rating\n                                        value={product.rating}\n                                        text={`${product.numReviews} reviews`}\n                                        color=\"orange\" />\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    Price: ${product.price}\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    In Stock Count: {product.countInStock}\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    Description: <span style={{ opacity: 0.7 }}>{product.description}</span>\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                        <Col md={3}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>\n                                                Price:\n                                            </Col>\n                                            <Col>\n                                                <strong>${product.price}</strong>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>\n                                                Status:\n                                            </Col>\n                                            <Col>\n                                                {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                    {product.countInStock > 0 && (\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>Select Qty</Col>\n                                                <Col>\n                                                    <Form.Control\n                                                        as=\"select\"\n                                                        value={qty}\n                                                        onChange={(e) => setQty(e.target.value)}>\n                                                        {[...Array(product.countInStock).keys()].map((x) => (\n                                                            <option key={x + 1} value={x + 1}>\n                                                                {x + 1}\n                                                            </option>\n                                                        ))}\n                                                    </Form.Control>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    )}\n                                    <ListGroup.Item>\n                                        <Button\n                                            onClick={addToCartHandler}\n                                            className=\"btn-block\"\n                                            type=\"button\"\n                                            disabled={product.countInStock === 0}>\n                                            Add to Cart\n                                        </Button>\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={6}>\n                            <h3>Reviews</h3>\n                            {product.reviews == 0 && <Message>No reviews</Message>}\n                            <ListGroup variant='flush'>\n                                {product.reviews.map(review => (\n                                    <ListGroup.Item key={review._id}>\n                                        <strong>{review.name}</strong>\n                                        <Rating value={review.rating} />\n                                        <p>{review.createdAt.substring(0, 10)}</p>\n                                        <p>{review.comment}</p>\n                                    </ListGroup.Item>\n                                ))}\n                                <ListGroup.Item>\n                                    <h3>Write a Review</h3>\n                                    {errorProductReview && <Message variant=\"danger\">{errorProductReview}</Message>}\n                                    {userInfo ? (<Form onSubmit={submitHandler}>\n                                        <Form.Group controlId=\"rating\">\n                                            <Form.Label>\n                                                Rating\n                                            </Form.Label>\n                                            <Form.Control as=\"select\" value={rating} onChange={(e) => setRating(e.target.value)}>\n                                                <option value=''>Select...</option>\n                                                <option value='1'>1 - Poor</option>\n                                                <option value='2'>2 - Fair</option>\n                                                <option value='3'>3 - Good</option>\n                                                <option value='4'>4 - Very Good</option>\n                                                <option value='5'>5 - Excellent</option>\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group controlId=\"comment\">\n                                            <Form.Label>\n                                                Comment\n                                            </Form.Label>\n                                            <Form.Control as=\"textarea\" row=\"3\" value={comment} onChange={(e) => setComment(e.target.value)}>\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Button type=\"submit\" variant=\"primary\">\n                                            Submit\n                                        </Button>\n                                    </Form>) : <Message>Please <Link to=\"/login\">sign in</Link> to write a review</Message>}\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                        <Col md={6}>\n                            <h3>More items coming soon</h3>\n                        </Col>\n                    </Row>\n                </>\n            }\n        </div>\n\n    )\n}\n\nexport default ProductScreen\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\n\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","import axios from 'axios'\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`api/products/${id}`)\n    console.log(\"Add to cart\", data)\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty,\n        },\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => async (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => async (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => async (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","import React, { useEffect } from 'react'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\nimport Message from '../components/Message'\n\nconst CartScreen = (props) => {\n\n    const productId = props.match.params.id\n    const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        props.history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? <Message>Your cart is empty <Link to=\"/\">Go Back</Link></Message> : (\n                    <ListGroup variant=\"flush\">\n                        {cartItems.map(item => (\n                            <ListGroup.Item key={item.product}>\n                                <Row>\n                                    <Col md={2}>\n                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                    </Col>\n                                    <Col md={3}>\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </Col>\n                                    <Col md={2}>\n                                        ${item.price}\n                                    </Col>\n                                    <Col md={2}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            value={item.qty}\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\n                                            {[...Array(item.countInStock).keys()].map((x) => (\n                                                <option key={x + 1} value={x + 1}>\n                                                    {x + 1}\n                                                </option>\n                                            ))}\n                                        </Form.Control>\n                                    </Col>\n                                    <Col md={2}>\n                                        <Button type=\"button\" variant=\"light\"\n                                            onClick={() => removeFromCartHandler(item.product)}>\n                                            <i className=\"fas fa-trash\"></i>\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2>Subtotal {cartItems.reduce((acc, item) => acc + item.qty, 0)} items</h2>\n                            $ {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Button type=\"button\" className=\"btn-block\"\n                                disabled={cartItems.length === 0} onClick={checkoutHandler}>\n                                Proceed to Checkout\n                            </Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { login } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\n\nconst LoginScreen = (props) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n\n    const { loading, error, userInfo } = userLogin\n\n    const redirect = props.location.search ? props.location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if (userInfo) {\n            props.history.push(redirect)\n        }\n    }, [props.history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        // DISPATCH LOGIN\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type=\"submit\" variant=\"primary\">Sign In</Button>\n            </Form>\n            <Row className=\"py-3\">\n                <Col>\n                    New Customer ? <Link\n                        to={redirect ? `/register?redirect=${redirect}` :\n                            '/register'}>Register</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { register } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\n\nconst RegisterScreen = (props) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userRegister = useSelector(state => state.userRegister)\n\n    const { loading, error, userInfo } = userRegister\n\n    const redirect = props.location.search ? props.location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if (userInfo) {\n            props.history.push(redirect)\n        }\n    }, [props.history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        // DISPATCH REGISTER\n        if (password !== confirmPassword) {\n            setMessage('Password do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant=\"danger\">{message}</Message>}\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type=\"name\" placeholder=\"Enter name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"confirmPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Confirm password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type=\"submit\" variant=\"primary\">Register</Button>\n            </Form>\n            <Row className=\"py-3\">\n                <Col>\n                    Have an account ? <Link\n                        to={redirect ? `/login?redirect=${redirect}` :\n                            '/login'}>Login</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile, } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\n\nconst ProfileScreen = (props) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { loading, error, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            props.history.push('/login')\n        } else {\n            if (!user.name) {\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, props.history, userInfo, user])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Password do not match')\n        } else {\n            // DISPATCH UPDATE\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\n        }\n\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n                {message && <Message variant=\"danger\">{message}</Message>}\n                {error && <Message variant=\"danger\">{error}</Message>}\n                {success && <Message variant=\"success\">Profile Updated</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId=\"name\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control type=\"name\" placeholder=\"Enter name\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}>\n\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}>\n\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Enter password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}>\n\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"confirmPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Confirm password\"\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\n\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type=\"submit\" variant=\"primary\">Update</Button>\n                </Form>\n            </Col>\n            <Col md={9}>\n                <h2 style={{ textAlign: \"center\" }}>My Orders</h2>\n                {loadingOrders ? <Loader /> : errorOrders ?\n                    <Message variant=\"danger\">{errorOrders}</Message> :\n                    (\n                        <Table striped bordered hover responsive className=\"table-sm\">\n                            <tHead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>DATE</th>\n                                    <th>TOTAL</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </tHead>\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>{order.totalPrice}</td>\n                                        <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                            <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                                        )}</td>\n                                        <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\n                                            <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                                        )}</td>\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button className=\"btn-sm\" variant=\"light\">\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/orderConstants\";\nimport axios from 'axios'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n        // const { userLogin: { userInfo } } = getState()\n\n        const userInfo = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.post(\n            `/api/orders`, order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        // const { userLogin: { userInfo } } = getState()\n\n        const userInfo = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.get(\n            `/api/orders/${id}`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        // const { userLogin: { userInfo } } = getState()\n\n        const userInfo = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.put(\n            `/api/orders/${orderId}/pay`, paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        // const { userLogin: { userInfo } } = getState()\n\n        const userInfo = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver`, {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        // const { userLogin: { userInfo } } = getState()\n\n        const userInfo = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.get(\n            `/api/orders/myorders`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        // const { userLogin: { userInfo } } = getState()\n\n        const userInfo = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.get(\n            `/api/orders`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = (props) => {\n    return (\n        <Nav className=\"justify-content-center mb-4\">\n            <Nav.Item>\n                {props.step1 ? (\n                    <LinkContainer to=\"/login\">\n                        <Nav.Link>Sign In</Nav.Link>\n                    </LinkContainer>\n                ) : <Nav.Link disabled>\n                    Sign In\n                </Nav.Link>}\n            </Nav.Item>\n            <Nav.Item>\n                {props.step2 ? (\n                    <LinkContainer to=\"/shipping\">\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : <Nav.Link disabled>\n                    Shipping\n                </Nav.Link>}\n            </Nav.Item>\n            <Nav.Item>\n                {props.step3 ? (\n                    <LinkContainer to=\"/payment\">\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : <Nav.Link disabled>\n                    Payment\n                </Nav.Link>}\n            </Nav.Item>\n            <Nav.Item>\n                {props.step4 ? (\n                    <LinkContainer to=\"/placeorder\">\n                        <Nav.Link>Place order</Nav.Link>\n                    </LinkContainer>\n                ) : <Nav.Link disabled>\n                    Place order\n                </Nav.Link>}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport { saveShippingAddress } from '../actions/cartActions'\nimport CheckoutSteps from '../components/CheckoutSteps'\n\nconst ShippingScreen = (props) => {\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector((state) => state.cart)\n    const { shippingAddress } = cart\n\n    // const ss = localStorage.getItem('shippingAddress')\n    //     ? JSON.parse(localStorage.getItem('shippingAddress'))\n    //     : {}\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.setCity)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        props.history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"address\">\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter address\"\n                        value={address}\n                        required\n                        onChange={(e) => setAddress(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"city\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter city\"\n                        value={city}\n                        required\n                        onChange={(e) => setCity(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"postalCode\">\n                    <Form.Label>PostalCode</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter postalCode\"\n                        value={postalCode}\n                        required\n                        onChange={(e) => setPostalCode(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"country\">\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter country\"\n                        value={country}\n                        required\n                        onChange={(e) => setCountry(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\">\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\n\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = (props) => {\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector((state) => state.cart)\n    const { shippingAddress } = cart\n    if (!shippingAddress.address) {\n        props.history.push('/shipping')\n    }\n\n    const ss = localStorage.getItem('paymentMethod')\n        ? JSON.parse(localStorage.getItem('paymentMethod'))\n        : {}\n\n    const [paymentMethod, setPaymentMethod] = useState(\"Paypal\")\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        props.history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n            <h1>Payment Method</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"address\">\n                    <Form.Label as=\"legend\">Select Method</Form.Label>\n                    <br />\n                    <Col>\n                        <Form.Check type=\"radio\" label=\"PayPal or Credit Card\"\n                            id=\"PayPal\"\n                            name=\"paymentmethod\"\n                            value=\"PayPal\"\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}>\n                        </Form.Check>\n\n                    </Col>\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\">\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { createOrder } from '../actions/orderActions'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport Message from '../components/Message'\n\nconst PlaceOrderScreen = (props) => {\n\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n\n    const paymentMethod = localStorage.getItem('paymentMethod') ?\n        JSON.stringify(localStorage.getItem('paymentMethod'))\n        : {}\n\n    console.log(paymentMethod)\n\n    // Calculate Prices \n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + (item.qty * item.price), 0)\n\n    cart.shippingPrice = cart.itemsPrice > 150 ? 5 : 30;\n    cart.taxPrice = Math.floor(cart.itemsPrice * 0.10)\n    cart.totalPrice = Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, success, error } = orderCreate\n\n    useEffect(() => {\n        if (success) {\n            props.history.push(`/order/${order._id}`)\n        }\n        // eslint-disable-next-line\n    }, [props.history, success])\n\n    const placeOrderHandler = (e) => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice\n        }))\n    }\n\n    return (\n        <>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Address:</strong>\n                                {' '}{cart.shippingAddress.address},{' '} {cart.shippingAddress.city}, {' '} {cart.shippingAddress.postalCode},{' '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <strong>Method: </strong>\n                            {paymentMethod.slice(3, 9)}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\n                                <ListGroup variant=\"flush\">\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant=\"flush\">\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {error && <Message variant=\"danger\">{error}</Message>}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Button type=\"button\" className=\"btn-block\"\n                                    disabled={cart.cartItems.length === 0}\n                                    onClick={placeOrderHandler}>\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n\n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { deliverOrder, getOrderDetails, payOrder } from '../actions/orderActions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nconst OrderScreen = (props) => {\n\n    const orderId = props.match.params.id\n\n    // Paypal\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const paymentMethod = localStorage.getItem('paymentMethod') ?\n        JSON.stringify(localStorage.getItem('paymentMethod'))\n        : {}\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, loading, error } = orderDetails\n\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    if (!loading) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + (item.qty * item.price), 0)\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            props.history.push('/login')\n        }\n        const addPayPalScript = async () => {\n            const { data: clientId } = await axios.get('/api/config/paypal')\n            const script = document.createElement(\"script\")\n            script.type = 'text/javascript'\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n            script.async = true\n            script.onload = () => {\n                setSdkReady(true)\n            }\n            document.body.appendChild(script)\n        }\n\n        if (!order || successPay || successDeliver) {\n            dispatch({\n                type: ORDER_PAY_RESET\n            })\n            dispatch({\n                type: ORDER_DELIVER_RESET\n            })\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n\n    }, [dispatch, orderId, successPay, successDeliver, order])\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> :\n        <>\n            <h1>Order {order._id}</h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p><strong>Name: </strong>{order.user.name}</p>\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                            <p>\n                                <strong>Address:</strong>\n                                {' '}{order.shippingAddress.address},{' '} {order.shippingAddress.city}, {' '} {order.shippingAddress.postalCode},{' '}\n                                {order.shippingAddress.country}\n                            </p>\n                            {order.isDelivered ? <Message variant=\"success\">Delivered on {order.deliveredAt}</Message> :\n                                <Message variant=\"danger\">Not Delivered</Message>}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p><strong>Method: </strong>\n                                {order.paymentMethod.slice(3, 9)}\n                            </p>\n                            {order.isPaid ? <Message variant=\"success\">Paid on {order.paidAt}</Message> :\n                                <Message variant=\"danger\">Not Paid</Message>}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n\n                            {order.orderItems.length === 0 ? <Message>Your order is empty</Message> : (\n                                <ListGroup variant=\"flush\">\n                                    {order.orderItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant=\"flush\">\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${order.totalPrice - order.shippingPrice - order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader />}\n                                    {!sdkReady ? <Loader /> : (\n                                        <PayPalButton amount={order.totalPrice}\n                                            onSuccess={successPaymentHandler} />\n                                    )}\n                                </ListGroup.Item>\n                            )}\n                            {loadingDeliver && <Loader />}\n                            {userInfo && order.isPaid && !order.isDelivered && (\n                                <ListGroup.Item>\n                                    <Button\n                                        type=\"button\"\n                                        className=\"btn btn-block\"\n                                        onClick={deliverHandler}>\n                                        Mark as Delivered\n                                    </Button>\n                                </ListGroup.Item>\n                            )}\n                        </ListGroup>\n                    </Card>\n                </Col>\n\n            </Row>\n        </>\n}\n\nexport default OrderScreen\n","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { deleteUser, listUsers } from '../actions/userActions'\n\n\nconst UserListScreen = (props) => {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n    const nameFromStorage = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n    useEffect(() => {\n        if (userInfo && nameFromStorage.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            props.history.push('/login')\n        }\n\n    }, [dispatch, props.history, successDelete, userInfo])\n\n    const deleteHandler = (id) => {\n        if (window.confirm(\"Are you sure?\")) {\n            dispatch(deleteUser(id))\n        }\n\n    }\n\n    return (\n        <>\n            <h1>Users</h1>\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message>\n                : (\n                    <Table striped hover bordered responsive className=\"table-sm\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>NAME</th>\n                                <th>EMAIL</th>\n                                <th>ADMIN</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {users.map((user) => (\n                                <tr key={user._id}>\n                                    <td>{user._id}</td>\n                                    <td>{user.name}</td>\n                                    <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\n                                    <td>{user.isAdmin ? (<i className=\"fas fa-check\" style={{ color: 'green' }}></i>) : (\n                                        <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                                    )}</td>\n                                    <td>\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                            <Button variant=\"light\" className=\"btn-sm\">\n                                                <i className=\"fas fa-edit\"></i>\n                                            </Button>\n                                        </LinkContainer>\n                                        <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id)}>\n                                            <i className=\"fas fa-trash\"></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n        </>\n    )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = (props) => {\n\n    const userId = props.match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    // const nameFromStorage = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { loading, error, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            props.history.push('/admin/userlist')\n        } else {\n            if (!user.name || user._id !== userId) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n    }, [dispatch, props.history, userId, user, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        // DISPATCH REGISTER\n        dispatch(updateUser({\n            _id: userId,\n            name,\n            email, isAdmin\n        }))\n    }\n\n    return (\n        <>\n            <Link to='/admin/userlist' className=\"btn btn-light my-3\">\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n                            <Form.Group controlId=\"name\">\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control type=\"name\" placeholder=\"Enter name\"\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}>\n\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId=\"email\">\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control type=\"email\" placeholder=\"Enter email\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}>\n\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"isadmin\">\n                                <Form.Check type=\"checkbox\" label=\"Is Admin?\"\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}>\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type=\"submit\" variant=\"primary\">Update</Button>\n                        </Form>\n                    )}\n\n            </FormContainer>\n        </>\n    )\n}\n\nexport default UserEditScreen\n","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { createProduct, deleteProduct, listProducts } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = (props) => {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, success: successDelete, error: errorDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, success: successCreate, error: errorCreate, product: createdProduct } = productCreate\n\n    const nameFromStorage = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n        if (!nameFromStorage.isAdmin) {\n            props.history.push('/login')\n        }\n\n        if (successCreate) {\n            props.history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts())\n        }\n\n    }, [dispatch, props.history, userInfo, successDelete, successCreate, createdProduct])\n\n    const deleteHandler = (id) => {\n        if (window.confirm(\"Are you sure?\")) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <>\n            <Row className=\"align-items-center\">\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n                <Col className=\"text-right\">\n                    <Button className=\"my-2\" onClick={createProductHandler}>\n                        <i className=\"fas fa-plus\"></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message>\n                : (\n                    <Table striped hover bordered responsive className=\"table-sm\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>NAME</th>\n                                <th>PRICE</th>\n                                <th>STOCK</th>\n                                <th>CATEGORY</th>\n                                <th>BRAND</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {products.map((product) => (\n                                <tr key={product._id}>\n                                    <td>{product._id}</td>\n                                    <td>{product.name}</td>\n                                    <td>${product.price}</td>\n                                    <td>{product.countInStock}</td>\n                                    <td>{product.category}</td>\n                                    <td>{product.brand}</td>\n                                    <td>\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                            <Button variant=\"light\" className=\"btn-sm\">\n                                                <i className=\"fas fa-edit\"></i>\n                                            </Button>\n                                        </LinkContainer>\n                                        <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id)}>\n                                            <i className=\"fas fa-trash\"></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n        </>\n    )\n}\n\nexport default ProductListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport axios from \"axios\"\n\nconst ProductEditScreen = (props) => {\n\n    const productId = props.match.params.id\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    // const nameFromStorage = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\n\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({\n                type: PRODUCT_UPDATE_RESET\n            })\n            props.history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== productId) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n            }\n        }\n    }, [dispatch, props.history, productId, product, successUpdate])\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n        formData.append('image', file)\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n            const { data } = await axios.post('/api/upload', formData, config)\n            setImage(data)\n            setUploading(false)\n        } catch (error) {\n            console.error(error)\n            setUploading(false)\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        // UPDATE PRODUCT\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            description,\n            countInStock\n        }))\n    }\n\n    return (\n        <>\n            <Link to='/admin/productlist' className=\"btn btn-light my-3\">\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit Product</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n                            <Form.Group controlId=\"name\">\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control type=\"name\" placeholder=\"Enter name\"\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}>\n\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId=\"price\">\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control type=\"number\" placeholder=\"Enter price\"\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}>\n\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"image\">\n                                <Form.Label>Image</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Image url\"\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}>\n                                </Form.Control>\n                                <Form.File id=\"image-file\" label=\"Choose File\" custom onChange={uploadFileHandler}>\n\n                                </Form.File>\n                                {uploading && <Loader />}\n                            </Form.Group>\n\n                            <Form.Group controlId=\"brand\">\n                                <Form.Label>Brand</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter brand\"\n                                    value={brand}\n                                    onChange={(e) => setBrand(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"category\">\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter category\"\n                                    value={category}\n                                    onChange={(e) => setCategory(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"countInStock\">\n                                <Form.Label>Count In Stock</Form.Label>\n                                <Form.Control type=\"number\" placeholder=\"Enter countInStock\"\n                                    value={countInStock}\n                                    onChange={(e) => setCountInStock(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"description\">\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter description\"\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Button type=\"submit\" variant=\"primary\">Update</Button>\n                        </Form>\n                    )}\n\n            </FormContainer>\n        </>\n    )\n}\n\nexport default ProductEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\n\nconst OrderListScreen = (props) => {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n    const nameFromStorage = localStorage.getItem('userInfo') != null ? JSON.parse(localStorage.getItem('userInfo')) : ''\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo && nameFromStorage.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            props.history.push('/login')\n        }\n    }, [dispatch, props.history, userInfo])\n\n\n    return (\n        <>\n            <h1>Orders</h1>\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message>\n                : (\n                    <Table striped hover bordered responsive className=\"table-sm\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>USER</th>\n                                <th>DATE</th>\n                                <th>TOTAL</th>\n                                <th>PAID</th>\n                                <th>DELIVERED</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map((order) => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.user && order.user.name}</td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>${order.totalPrice}</td>\n                                    <td>{order.isPaid ? (order.paidAt.substring(0, 10)) : (\n                                        <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                                    )}</td>\n                                    <td>{order.isDelivered ? (order.deliveredAt.substring(0, 10)) : (\n                                        <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                                    )}</td>\n                                    <td>\n                                        <LinkContainer to={`/order/${order._id}`}>\n                                            <Button variant=\"light\" className=\"btn-sm\">\n                                                Details\n                                            </Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n        </>\n    )\n}\n\nexport default OrderListScreen\n","import React from 'react'\nimport './App.css';\nimport { Container } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/search/:keyword\" component={HomeScreen} />\n          <Route path=\"/\" component={HomeScreen} exact />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/admin/userList\" component={UserListScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n          <Route path=\"/admin/productlist\" component={ProductListScreen} />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n        </Container>\n\n      </main>\n      <Footer />\n\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productCreateReducer, productDeleteReducer, productDetailsReducer, productListReducer, productReviewCreateReducer, productUpdateReducer } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer, userUpdateReducer } from './reducers/userReducers'\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer } from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productReviewCreate: productReviewCreateReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderDeliver: orderDeliverReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer\n})\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.stringify(localStorage.getItem('userInfo'))\n    : null\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n    ? JSON.parse(localStorage.getItem('cartItems'))\n    : []\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n    JSON.stringify(localStorage.getItem('shippingAddress'))\n    : {}\n\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ?\n    JSON.stringify(localStorage.getItem('paymentMethod'))\n    : {}\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n        paymentMethod: paymentMethodFromStorage\n    },\n    userLogin: {\n        userInfo: userInfoFromStorage\n    }\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store\n\n","import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_RESET, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_RESET, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\"\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true }\n        case PRODUCT_LIST_SUCCESS:\n            return { loading: false, products: action.payload }\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true }\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true }\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true }\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_CREATE_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true }\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_UPDATE_RESET:\n            return { product: {} }\n        default:\n            return state\n    }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading: true }\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading: false, success: true }\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n        default:\n            return state\n    }\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from \"../constants/cartConstants\";\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n\n            const existItem = state.cartItems.find(x => x.product === item.product)\n\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x => x.product === existItem.product\n                        ? item : x)\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\n            }\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymengtMethod: action.payload\n            }\n\n        default:\n            return state\n    }\n}","import { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_RESET, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_RESET, USER_UPDATE_SUCCESS } from \"../constants/userConstants\"\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LOGOUT:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_DETAILS_RESET:\n            return { user: {} }\n        default:\n            return state\n    }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LIST_RESET:\n            return { users: [] }\n        default:\n            return state\n    }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_UPDATE_RESET:\n            return { user: {} }\n        default:\n            return state\n    }\n}","import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_RESET, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_RESET, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_RESET, ORDER_PAY_SUCCESS } from \"../constants/orderConstants\";\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true,\n            }\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            }\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        case ORDER_PAY_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true,\n            }\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            }\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        case ORDER_DELIVER_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true,\n            }\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload,\n            }\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        case ORDER_LIST_MY_RESET:\n            return {\n                orders: []\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true,\n            }\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload,\n            }\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}